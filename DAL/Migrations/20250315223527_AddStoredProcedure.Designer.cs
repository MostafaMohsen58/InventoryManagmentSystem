// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagmentSystem.DAL.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20250315223527_AddStoredProcedure")]
    partial class AddStoredProcedure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tablets"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cameras"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Laptops"
                        });
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Samsung Galaxy S24",
                            Price = 18000m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Name = "iPhone 15 Pro Max",
                            Price = 22000m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Name = "iPad Pro 12.9",
                            Price = 17000m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Name = "Samsung Galaxy Tab S9",
                            Price = 15000m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            Name = "Sony Alpha a7 IV",
                            Price = 25000m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5,
                            Name = "LG UltraGear 32",
                            Price = 14000m,
                            SupplierId = 4
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            Name = "Canon EOS R5",
                            Price = 28000m,
                            SupplierId = 5
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            Name = "Nikon Z9",
                            Price = 30000m,
                            SupplierId = 6
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 6,
                            Name = "Dell XPS 15",
                            Price = 20000m,
                            SupplierId = 7
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 6,
                            Name = "HP Spectre x360",
                            Price = 18000m,
                            SupplierId = 8
                        });
                });

            modelBuilder.Entity("DAL.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total_Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer_Name = "Omar",
                            Date = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 90000m
                        },
                        new
                        {
                            Id = 2,
                            Customer_Name = "Mohamed",
                            Date = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 154000m
                        },
                        new
                        {
                            Id = 3,
                            Customer_Name = "Ali",
                            Date = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 68000m
                        },
                        new
                        {
                            Id = 4,
                            Customer_Name = "Nader",
                            Date = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 150000m
                        },
                        new
                        {
                            Id = 5,
                            Customer_Name = "Ahmed",
                            Date = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 84000m
                        },
                        new
                        {
                            Id = 6,
                            Customer_Name = "Sara",
                            Date = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total_Price = 56000m
                        });
                });

            modelBuilder.Entity("DAL.Models.SalesDetails", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId", "SaleId");

                    b.HasIndex("SaleId");

                    b.ToTable("SalesDetails");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SaleId = 1,
                            Price = 90000m,
                            Quantity = 5,
                            unitPrice = 18000m
                        },
                        new
                        {
                            ProductId = 2,
                            SaleId = 2,
                            Price = 154000m,
                            Quantity = 7,
                            unitPrice = 22000m
                        },
                        new
                        {
                            ProductId = 3,
                            SaleId = 3,
                            Price = 68000m,
                            Quantity = 4,
                            unitPrice = 17000m
                        },
                        new
                        {
                            ProductId = 5,
                            SaleId = 4,
                            Price = 150000m,
                            Quantity = 6,
                            unitPrice = 25000m
                        },
                        new
                        {
                            ProductId = 7,
                            SaleId = 5,
                            Price = 84000m,
                            Quantity = 3,
                            unitPrice = 28000m
                        },
                        new
                        {
                            ProductId = 9,
                            SaleId = 6,
                            Price = 40000m,
                            Quantity = 2,
                            unitPrice = 20000m
                        },
                        new
                        {
                            ProductId = 10,
                            SaleId = 6,
                            Price = 16000m,
                            Quantity = 1,
                            unitPrice = 16000m
                        });
                });

            modelBuilder.Entity("DAL.Models.Stock", b =>
                {
                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("LastUpdate", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Quantity = 40,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Quantity = 35,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Quantity = 20,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Quantity = 25,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Quantity = 15,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            Quantity = 10,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            Quantity = 8,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 8,
                            Quantity = 5,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 9,
                            Quantity = 12,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 10,
                            Quantity = 18,
                            Type = "Supply"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Quantity = 5,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Quantity = 7,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Quantity = 4,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Quantity = 6,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2024, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Quantity = 3,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            Quantity = 2,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            Quantity = 1,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 8,
                            Quantity = 2,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 9,
                            Quantity = 5,
                            Type = "Sale"
                        },
                        new
                        {
                            LastUpdate = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 10,
                            Quantity = 4,
                            Type = "Sale"
                        });
                });

            modelBuilder.Entity("DAL.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Samsung Town, Seoul, South Korea",
                            Contact = "82 2 2053 3000",
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            Address = "1 Apple Park Way, Cupertino, CA 95014, USA",
                            Contact = "1 800-275-2273",
                            Name = "Apple Inc."
                        },
                        new
                        {
                            Id = 3,
                            Address = "1-7-1 Konan, Minato-ku, Tokyo, Japan",
                            Contact = "81 3 6748 2111",
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 4,
                            Address = "LG Twin Towers, Seoul, South Korea",
                            Contact = "82 2 3777 1114",
                            Name = "LG Electronics"
                        },
                        new
                        {
                            Id = 5,
                            Address = "30-2, Shimomaruko 3-chome, Ota-ku, Tokyo, Japan",
                            Contact = "81 3 3758 2111",
                            Name = "Canon"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Shinagawa Intercity Tower C, 2-15-3, Konan, Minato-ku, Tokyo, Japan",
                            Contact = "81 3 6433 3600",
                            Name = "Nikon"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Round Rock, Texas, USA",
                            Contact = "1 800-624-9897",
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 8,
                            Address = "1501 Page Mill Road, Palo Alto, CA 94304, USA",
                            Contact = "1 650-857-1501",
                            Name = "HP"
                        });
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin1234",
                            Role = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "Manager1234",
                            Role = "Manager",
                            UserName = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Password = "user1234",
                            Role = "Staff",
                            UserName = "Staff"
                        },
                        new
                        {
                            Id = 4,
                            Password = "Ali1234",
                            Role = "Staff",
                            UserName = "Ali"
                        });
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.HasOne("DAL.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DAL.Models.SalesDetails", b =>
                {
                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany("SalesDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Sale", "Sale")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("DAL.Models.Stock", b =>
                {
                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Navigation("SalesDetails");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("DAL.Models.Sale", b =>
                {
                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("DAL.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
